x	work flow 
API-1(member Creation)
user service 
-> user created and updated profile 
-> user data send to kafka 

loyalty service
-> consume kafka topic 
-> create member details to user
	* fetch tier based on user country 
	* fetch voucher based on user country and engagement (create voucherID -> random values)
	* send voucher through e mail and assign the voucher to user 
	* save and update member details. 

API-2 (while placing an Order)
-> ms-communication to fetch loyalty available points of the user .
-> fetch the constant value of discount used from the loyalty points .
-> apply the discount to the final price of order from the loyalty points .
-> place the order and then send the order details to the kafka


API - 3 (reward functionality)
-> after user make successful purchase order amount will send to kafka with user details
-> consume in loyalty and fetch engagement detais based on country details.
-> Calculate the rewards to be awarded and update the user loyalty points.


order service 
-> while placing the order validate the voucher code and voucher validity date and apply if applicable

user service 
-> add country and DOB 

loyaltyservice -
-> API- 4 ( email creation)
 fetch all users birthday of tmrw date and send email by assigning the birthday voucher .

-> festival voucher to all members 



INDIA
0-BEGINNER (0,999)
1-PLAYER(1000,3999)
2-PLAYMAKER(4000,9999)
3-MASTER(10000)

US
0-INITIATOR
1-PRO
2-PROMAKER
3-GAMECHANGER

MX
0-starter
1-basic
2-professional
3-premium

CN
0-bronze
1-silver
2-gold
3-diamond





MemberIdCreation
System.out.println(RandomStringUtils.randomAlphanumeric(10).toUpperCase());

OR

static final String AB = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
static SecureRandom rnd = new SecureRandom();

String randomString(int len){
   StringBuilder sb = new StringBuilder(len);
   for(int i = 0; i < len; i++)
      sb.append(AB.charAt(rnd.nextInt(AB.length())));
   return sb.toString();
}


-------------------------------------
VocherID Creation

public static String generateString() {
        String uuid = UUID.randomUUID().toString();
        return "uuid = " + uuid;
    }




https://stackoverflow.com/questions/23008529/send-html-page-as-email-in-java


public static void main(String[] args) throws Exception {
		emailGenerator("nithinmk26@gmail.com", "Hello nithin");
		System.out.println("Mail Sent Successfully!!!!!!!!!!!!!!!!!");
	}

	public static void emailGenerator(String email, String message) throws MessagingException, Exception, IOException {
		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "587");

		Session session = Session.getInstance(props, new javax.mail.Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication("komala.thagadaiah@gmail.com", "Bunny77!!");
			}
		});
		Message msg = new MimeMessage(session);
		msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(email));
		msg.setSubject("Your Account Creation  Status");
		msg.setSentDate(new Date());

		MimeBodyPart messageBodyPart = new MimeBodyPart();
		StringWriter writer = new StringWriter();
		IOUtils.copy(new FileInputStream(new File("C:/poc_Loyalty/loyalty_rewards/user-service/src/main/resources/templates/mailTemplate.html")), writer);

		
		messageBodyPart.setContent(writer.toString(), "text/html");

		Multipart multipart = new MimeMultipart();
		multipart.addBodyPart(messageBodyPart);
		MimeBodyPart attachPart = new MimeBodyPart();
		msg.setContent(multipart);
		Transport.send(msg);
	}

